apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "app.we.go.emojidraw"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "app.we.go.emojidraw.CustomRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }


    flavorDimensions "mode"

    productFlavors {
        standard {
            dimension "mode"
        }

        sequential {
            dimension "mode"
            applicationIdSuffix ".seq"
        }

        fixed {
            dimension "mode"
            applicationIdSuffix ".fixed"
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        // To check for a certain build type, use variant.buildType.name == "<buildType>"
        if (!names.contains("standard") && variant.buildType.name == "release") {
            // Gradle ignores any variants that satisfy the conditions above.
            setIgnore(true)
        }
    }

}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:${rootProject.ANDROIDX_APPCOMPAT_VERSION}"
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.ANDROIDX_CONSTRAINT_VERSION}"
    implementation "androidx.recyclerview:recyclerview:${rootProject.ANDROIDX_RECYCLER_VERSION}"
//    implementation "com.google.android.material:material:1.0.0"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:${rootProject.RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.RETROFIT_VERSION}"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.OKHTTP3_VERSION}"

    // rx
    implementation "io.reactivex.rxjava2:rxjava:${rootProject.RX_JAVA_VERSION}"
    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.RX_ANDROID_VERSION}"

    // dagger
    implementation "com.google.dagger:dagger:${rootProject.DAGGER_VERSION}"
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.DAGGER_VERSION}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.DAGGER_VERSION}"
    androidTestImplementation "com.google.dagger:dagger:${rootProject.DAGGER_VERSION}"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:${rootProject.DAGGER_VERSION}"
    kaptAndroidTest "com.google.dagger:dagger-compiler:${rootProject.DAGGER_VERSION}"

    testImplementation "junit:junit:${rootProject.JUNIT_VERSION}"

    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    androidTestImplementation 'com.squareup.assertj:assertj-android:1.2.0'
    androidTestImplementation  'org.assertj:assertj-core:3.6.2'

    testImplementation "org.mockito:mockito-core:${rootProject.MOCKITO_VERSION}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${rootProject.MOCKITO_KOTLIN_VERSION}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "com.jakewharton.timber:timber:${rootProject.TIMBER_VERSION}"

}
repositories {
    mavenCentral()
}
